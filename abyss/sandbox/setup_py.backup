import os
import setuptools
import glob

CURRENT_DIR = os.path.abspath(os.path.dirname(__file__))

with open("README.md", "r", encoding="utf-8") as fh:
    long_description = fh.read()

# from https://justinnhli.com/posts/2020/05/sharing-git-repositories-between-pip-and-setuppy.html

# uncomment if on Airbus network
# DEPENDENCIES = {
#     'transformers': 'https://github.airbus.corp/Airbus/transformers.git',
#     'tsfm-public': 'https://github.airbus.corp/Airbus/tsfm.git',
#     'accelerate': 'https://github.airbus.corp/Airbus/accelerate.git',
# }

# # uncomment if on public internet
# DEPENDENCIES = {
#     'transformers': 'https://github.com/whutabarat-sheffield/transformers-wh.git',
#     'tsfm-public': 'https://github.com/ibm-granite/granite-tsfm.git',
#     'accelerate': 'https://github.com/huggingface/accelerate.git',
# }

# These are local tarballs of the dependencies
LOCAL_DEPENDENCIES = {
    # 'transformers': 'transformers-4.48.0.dev0.tar.gz', # gives wrong result
    'transformers': 'transformers-4.41.0.dev0.tar.gz',
    'tsfm-public': 'tsfm_public-0.2.17.tar.gz',
    'accelerate': 'accelerate-1.2.1.tar.gz',
}

def get_dependency(package, location):
    if location == 'git':
        return f'{package} @ git+{LOCAL_DEPENDENCIES[package]}'
    elif location == 'link':
        return f'{LOCAL_DEPENDENCIES[package]}#egg={package}'
    elif location == 'local':
        local_dep = os.path.join(CURRENT_DIR, '..', 'deps', f'{LOCAL_DEPENDENCIES[package]}')
        return f'{package} @ file:///{local_dep}'
    else:
        raise ValueError(f'Unknown location: {location}')

def package_files(directory):
    paths = []
    for (path, directories, filenames) in os.walk(directory):
        for filename in filenames:
            paths.append(os.path.join('..', path, filename))
    return paths

extra_files = package_files('src/abyss/trained_model')

data_files = []
directories = glob.glob('./src/abyss/trained_model')
for directory in directories:
    files = glob.glob(directory+'*')
    # data_files.extend((directory, files))
    data_files.extend(files)

# print(data_files)
open('data_files.log', 'w').write(os.getcwd() + '\n' + '\n'.join(data_files))
open('extra_files.log', 'w').write(os.getcwd() + '\n' + '\n'.join(extra_files))

setuptools.setup(
    name="abyss",
    version="0.1.0",
    author="Digital Manufacturing Group - University of Sheffield",
    author_email="w.hutabarat@sheffield.ac.uk",
    description="Electric drill data processing",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.airbus.corp/Airbus/uos-drilling",
    project_urls={
        "Bug Tracker": "https://github.airbus.corp/Airbus/uos-drilling/issues",
    },
    classifiers=[
        "Programming Language :: Python :: 3",
        "Operating System :: OS Independent",
    ],
    package_dir={"": "src"},
    packages=setuptools.find_packages(where="src"),
    include_package_data=True,
    package_data={'': extra_files},
    python_requires=">=3.9",
    install_requires=[
        # 'distribute',
        'numpy',
        'pandas',
        # 'matplotlib',
        'openpyxl',
        # 'h5py',
        # 'nptdms',
        # 'scaleogram',
        # 'torch@https://download.pytorch.org/whl/cu118/torch-2.3.1%2Bcu118-cp310-cp310-win_amd64.whl',
        # 'torch==2.3.1+cu118', # This ensures that the CUDA 11.8 version of torch is installed
        'torch==2.3.1',
        # 'torchvision',
        # 'torchaudio',
        # 'tensorboardX',
        # 'ipykernel',
        # 'jupyter',
        'paho-mqtt<2.0.0', # MQTT client
        'pyyaml', # YAML parser
        # get_dependency('transformers', location='local'),
        # get_dependency('tsfm-public', location='local'),
        # get_dependency('accelerate', location='local'),
    ],
    entry_points={
        'console_scripts': [
            'depth-est = abyss:run.uos_depth_estimation_listen',
        ],
    },

)

# setuptools.setup(
#     name="abyss",
#     version="2.0.0",
#     author="David Miller",
#     author_email="d.b.miller@sheffield.ac.uk",
#     description="Electric drill data processing",
#     long_description=long_description,
#     long_description_content_type="text/markdown",
#     url="https://github.airbus.corp/Airbus/uos-drilling",
#     project_urls={
#         "Bug Tracker": "https://github.airbus.corp/Airbus/uos-drilling/issues",
#     },
#     classifiers=[
#         "Programming Language :: Python :: 3",
#         "Operating System :: OS Independent",
#     ],
#     package_dir={"": "src"},
#     packages=setuptools.find_packages(where="src"),
#     python_requires=">=3.9",
#     install_requires=[
#         'numpy',
#         'pandas',
#         'matplotlib',
#         'openpyxl',
#         'h5py',
#         'nptdms',
#         'scaleogram',
#         'torch',
#         'torchvision',
#         'torchaudio',
#         'numpy',
#         'pandas',
#         'matplotlib',
#         # 'pytorch-cuda',
#         'tensorboardX',
#         'ipykernel',
#         'jupyter',
#         'paho-mqtt'
#         get_dependency('transformers', location='git'),
#         get_dependency('tsfm-public', location='git'),
#         get_dependency('accelerate', location='git'),
#     ],
#     dependency_links=[
#         get_dependency('transformers', location='link'),
#         get_dependency('tsfm-public', location='link'),
#         get_dependency('accelerate', location='link'),
#     ],
#     entry_points={
#         'console_scripts': [
#             'depth-est = abyss:run.uos_depth_estimation',
#         ],
#     },
#     include_package_data=True,
# )