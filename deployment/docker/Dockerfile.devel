# Use an official Python slim image
ARG PYTHON_VERSION=3.10.16
FROM python:${PYTHON_VERSION}-slim

# Python environment configuration
# Prevents Python from writing pyc files
ENV PYTHONDONTWRITEBYTECODE=1  
# Avoids buffering stdout/stderr for better logs
ENV PYTHONUNBUFFERED=1         

# Create a non-privileged user
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser

# Copy certificates first (needed for pip)
COPY deployment/certs/ ./certs

# Upgrade pip
RUN python -m pip install --cert ./certs/airbus-ca.pem \
    --trusted-host pypi.org --trusted-host files.pythonhosted.org \ 
    --upgrade pip

# Set up build directory
WORKDIR /build/abyss

# Copy only the files needed for installation first (for better caching)
COPY abyss/pyproject.toml abyss/README.md abyss/MANIFEST.in abyss/requirements.txt ./
COPY abyss/wheels ./wheels
COPY abyss/src ./src

# Install dependencies (single layer for all installations)
# Using trusted hosts and certificate for corporate environments
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --cert ./certs/airbus-ca.pem \
    --trusted-host pypi.org --trusted-host files.pythonhosted.org \
    -r requirements.txt && \
    python -m pip install --cert ./certs/airbus-ca.pem \
    --trusted-host pypi.org --trusted-host files.pythonhosted.org \
    ./wheels/*.whl && \
    python -m pip install --cert ./certs/airbus-ca.pem \
    --trusted-host pypi.org --trusted-host files.pythonhosted.org .

# Set up application directory
WORKDIR /app

# Copy runtime configuration
COPY abyss/src/abyss/run .

# Set up cache directories with proper permissions
RUN mkdir -p /app/.cache/transformers /app/.cache/matplotlib && \
    chown -R appuser:appuser /app/.cache

# Configure environment variables for cache locations
ENV MPLCONFIGDIR=/app/.cache/matplotlib
ENV HF_HOME=/app/.cache/transformers

# MQTT port
EXPOSE 1883

# Switch to non-privileged user
USER appuser

# Run the application
CMD ["uos_depthest_listener", "--config", "mqtt_conf_docker.yaml", "--log-level", "INFO"]